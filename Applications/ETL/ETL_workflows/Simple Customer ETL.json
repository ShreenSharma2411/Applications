{"name":"Simple Customer ETL","uuid":"1683b851-fa6d-433f-a874-d66519149993","category":"ETL","description":"ETL Workflow Simple","nodes":[{"id":"2","name":"ReadCSV","description":"It reads in CSV files and creates a DataFrame from it","details":"","examples":"","type":"dataset","nodeClass":"fire.nodes.dataset.NodeDatasetCSV","x":"377.097px","y":"518.566px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"path","value":"data/etl_customer/geo.csv","widget":"textfield","title":"Path","description":"Path of the Text file/directory","required":true,"display":true,"editable":true,"disableRefresh":false},{"name":"separator","value":",","widget":"textfield","title":"Separator","description":"CSV Separator","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"header","value":"true","widget":"array","title":"Header","description":"Does the file have a header row","optionsArray":["true","false"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"dropMalformed","value":"false","widget":"array","title":"Drop Malformed","description":"Whether to drop Malformed records or error","optionsArray":["true","false"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"outputColNames","value":"[\"geo_id\",\" geo_name\"]","widget":"schema_col_names","title":"Column Names for the CSV","description":"New Output Columns of the SQL","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"outputColTypes","value":"[\"STRING\",\"STRING\"]","widget":"schema_col_types","title":"Column Types for the CSV","description":"Data Type of the Output Columns","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"outputColFormats","value":"[\"\",\"\"]","widget":"schema_col_formats","title":"Column Formats for the CSV","description":"Format of the Output Columns","required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"scala"},{"id":"9","name":"CastColumnType","description":"This node creates a new DataFrame by casting input columns with a new data type","details":"","examples":"","type":"transform","nodeClass":"fire.nodes.etl.NodeCastColumnType","x":"368.073px","y":"325.573px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"inputCols","value":"[\"price\"]","widget":"variables","title":"Columns","description":"Columns to be cast to new data type","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"outputColType","value":"DOUBLE","widget":"array","title":"New Data Type","description":"New data type(INTEGER, DOUBLE, STRING, LONG, SHORT)","optionsArray":["BOOLEAN","BYTE","DATE","DECIMAL","DOUBLE","FLOAT","INTEGER","LONG","SHORT","STRING","TIMESTAMP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"replaceExistingCols","value":"true","widget":"array","title":"Replace Existing Cols","description":"Whether to replace existing columns or create new ones","optionsArray":["true","false"],"required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"scala"},{"id":"10","name":"RowFilter","description":"This node creates a new DataFrame containing only rows satisfying given condition","details":"This node creates a new DataFrame containing only rows satisfying the given condition.\u003cbr\u003e\n\u003cbr\u003e\n\u003ch2\u003eExamples of Conditional Expression\u003c/h2\u003e\n\u003cbr\u003e\ncol1 \u003e 5 AND col2 \u003e 3\u003cbr\u003e\n\u003cbr\u003e\nname is not NULL\u003cbr\u003e\n\u003cbr\u003e\nname is NULL\u003cbr\u003e\n\u003cbr\u003e\nusd_pledged_real \u003e 0 and (category \u003d \"Narrative Film\" or category \u003d\u003d \"Music\") and goal \u003e 100\u003cbr\u003e\n\u003cbr\u003e\ndatetime \u003e \u00272011-01-01 00:00:00.0\u0027     (datetime column is of type timestamp)\u003cbr\u003e\n\u003cbr\u003e\ndatetime \u003e \u00272011-01-01 00:00:00.0\u0027 and datetime \u003c \u00272016-01-01 00:00:00.0\u0027\u003cbr\u003e","examples":"","type":"transform","nodeClass":"fire.nodes.etl.NodeRowFilter","x":"58.0938px","y":"327.587px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"conditionExpr","value":"price not like \u0027%,%\u0027","widget":"textarea_small","title":"Conditional Expression","description":"The filtering condition. Rows not satisfying given condition will be excluded from output DataFrame. eg: usd_pledged_real \u003e 0 and (category \u003d 1 or category \u003d\u003d 2) and goal \u003e 100","required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"scala"},{"id":"11","name":"JoinUsingColumn","description":"This node joins the incoming dataframes on a joinCol","details":"","examples":"","type":"join","nodeClass":"fire.nodes.etl.NodeJoinUsingColumn","x":"659.09px","y":"411.538px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"joinCol","value":"geo_id","widget":"textfield","title":"Join Column","description":"column on which to join","required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"scala"},{"id":"19","name":"SaveCSV","description":"Saves the DataFrame into the specified location in CSV Format","details":"","examples":"","type":"transform","nodeClass":"fire.nodes.save.NodeSaveCSV","x":"933.354px","y":"408.865px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"path","value":"/tmp/customer_results","widget":"textfield","title":"Path","description":"Path where to save the CSV files","required":true,"display":true,"editable":true,"disableRefresh":false},{"name":"saveMode","value":"Overwrite","widget":"array","title":"Save Mode","description":"Whether to Append, Overwrite or Error if the path Exists","optionsArray":["Append","Overwrite","ErrorIfExists","Ignore"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"header","value":"false","widget":"array","title":"Header","description":"Should a Header Row be saved with each File?","optionsArray":["true","false"],"required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"scala"},{"id":"23","name":"Notes","description