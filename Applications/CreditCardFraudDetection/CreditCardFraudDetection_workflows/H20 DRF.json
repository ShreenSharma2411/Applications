{"name":"H20 DRF","uuid":"0eb6af8a-3425-4d90-9ce6-f78756bafb2a","category":"-","nodes":[{"id":"1","name":"ReadCSV","description":"It reads in CSV files and creates a DataFrame from it","details":"","examples":"","type":"dataset","nodeClass":"fire.nodes.dataset.NodeDatasetCSV","x":"35.5px","y":"146px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"path","value":"data/creditcardfraud/creditcardfraud_sampled.csv","widget":"textfield","title":"Path","description":"Path of the Text file/directory","required":true,"display":true,"editable":true,"disableRefresh":false},{"name":"separator","value":",","widget":"textfield","title":"Separator","description":"CSV Separator","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"header","value":"true","widget":"array","title":"Header","description":"Does the file have a header row","optionsArray":["true","false"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"dropMalformed","value":"false","widget":"array","title":"Drop Malformed","description":"Whether to drop Malformed records or error","optionsArray":["true","false"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"outputColNames","value":"[\"V1\",\"V2\",\"V3\",\"V4\",\"V5\",\"V6\",\"V7\",\"V8\",\"V9\",\"V10\",\"V11\",\"V12\",\"V13\",\"V14\",\"V15\",\"V16\",\"V17\",\"V18\",\"V19\",\"V20\",\"V21\",\"V22\",\"V23\",\"V24\",\"V25\",\"V26\",\"V27\",\"V28\",\"Amount\",\"Class\"]","widget":"schema_col_names","title":"Column Names for the CSV","description":"New Output Columns of the SQL","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"outputColTypes","value":"[\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"DOUBLE\",\"STRING\"]","widget":"schema_col_types","title":"Column Types for the CSV","description":"Data Type of the Output Columns","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"outputColFormats","value":"[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]","widget":"schema_col_formats","title":"Column Formats for the CSV","description":"Format of the Output Columns","required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"scala"},{"id":"9","name":"Split With Stratified Sampling","description":"This node splits the incoming DataFrame into 2. It takes in the fraction to use in splitting the data by Stratified Sampling.","details":"Split With Stratified Sampling, which is the preferred way to sample from populations with varing subpopulation sizes.\u003cbr\u003e\n\u003cbr\u003e\nMore details are available at : \u003ca href\u003d\"https://spark.apache.org/docs/latest/api/python/_modules/pyspark/sql/dataframe.html#DataFrame.sampleBy\" target\u003d\"_blank\"\u003espark.apache.org/docs/latest/api/python/_modules/pyspark/sql/dataframe.html#DataFrame.sampleBy\u003c/a\u003e\u003cbr\u003e","examples":"","type":"transform","nodeClass":"fire.nodes.util.SplitWithStratifiedSampling","x":"238.25px","y":"155px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"keyInputCol","value":"Class","widget":"variable","title":"Column Name","description":"column that defines strata","required":true,"display":true,"editable":true,"disableRefresh":false},{"name":"fraction","value":"0.8","widget":"textfield","title":"Fraction","description":"sampling fraction for each stratum. If a stratum is not specified, we treat its fraction as zero","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"seed","value":"0","widget":"textfield","title":"Seed","description":"random seed","required":false,"display":true,"editable":true,"disableRefresh":false}],"engine":"scala"},{"id":"13","name":"H2ODRF","description":"H2O DRF","details":"Distributed Random Forest (DRF) is a powerful classification and regression tool. When given a set of data, DRF generates a forest of classification or regression trees, rather than a single classification or regression tree. Each of these trees is a weak learner built on a subset of rows and columns. More trees will reduce the variance. Both classification and regression take the average prediction over all of their trees to make a final prediction, whether predicting for a class or numeric value.\u003cbr\u003e\n\u003cbr\u003e\nMore details are available at : \u003ca href\u003d\"http://docs.h2o.ai/h2o/latest-stable/h2o-docs/data-science/drf.html\" target\u003d\"_blank\"\u003edocs.h2o.ai/h2o/latest-stable/h2o-docs/data-science/drf.html\u003c/a\u003e\u003cbr\u003e","examples":"","type":"transform","nodeClass":"fire.nodes.h2o.NodeH2ODrf","x":"519.25px","y":"151px","fields":[{"name":"storageLevel","value":"DEFAULT","widget":"array","title":"Output Storage Level","description":"Storage Level of the Output Datasets of this Node","optionsArray":["DEFAULT","NONE","DISK_ONLY","DISK_ONLY_2","MEMORY_ONLY","MEMORY_ONLY_2","MEMORY_ONLY_SER","MEMORY_ONLY_SER_2","MEMORY_AND_DISK","MEMORY_AND_DISK_2","MEMORY_AND_DISK_SER","MEMORY_AND_DISK_SER_2","OFF_HEAP"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"response_column","value":"Class","widget":"variable","title":"Response Column","description":"","required":true,"display":true,"editable":true,"disableRefresh":false},{"name":"isResponseIsCategorical","value":"true","widget":"array","title":"isResponseColIsCategorical","description":"it Specify a response column type(numeric or categorical). Separates the Classification and Regression","optionsArray":["false","true"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"ignore_const_cols","value":"true","widget":"array","title":"Ignore Const Cols","description":"Specify whether to ignore constant training columns, since no information can be gained from them","datatypes":["boolean"],"optionsArray":["false","true"],"required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"ignored_columns","value":"[\"label\"]","widget":"variables","title":"Ignored Columns","description":"Specify the column or columns to be excluded from the model (Optional, Python and Flow only)","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"fold_column","widget":"variable","title":"Fold Column","description":"Specify the column that contains the cross-validation fold index assignment per observation","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"weights_column","value":"","widget":"variable","title":"Weights Column","description":"Specify whether to ignore constant training columns, since no information can be gained from them (enabled by default)","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"hl","value":"","widget":"horizontal_line","title":"hl","required":false,"display":true,"editable":true,"disableRefresh":false},{"name":"max_depth","value":"5","widget":"textfield","title":"Max Depth","description":"Specify the maximum tree depth (